package PIM.WEBSERIVE.ACTIVITIE.STUDENT.Model;
// default package
// Generated 22 �.�. 2561, 22:56:21 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InfoActivitieHasAccount generated by hbm2java
 */
@Entity
@Table(name = "info_activitie_has_account", catalog = "panyapiway_student_activitie")
public class InfoActivitieHasAccount implements java.io.Serializable {

	private InfoActivitieHasAccountId id;
	private Account account;
	private InfoActivitie infoActivitie;
	private Date createDate;

	public InfoActivitieHasAccount() {
	}

	public InfoActivitieHasAccount(InfoActivitieHasAccountId id, Account account, InfoActivitie infoActivitie) {
		this.id = id;
		this.account = account;
		this.infoActivitie = infoActivitie;
	}

	public InfoActivitieHasAccount(InfoActivitieHasAccountId id, Account account, InfoActivitie infoActivitie,
			Date createDate) {
		this.id = id;
		this.account = account;
		this.infoActivitie = infoActivitie;
		this.createDate = createDate;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "infoActivitieId", column = @Column(name = "info_activitie_id", nullable = false)),
			@AttributeOverride(name = "accountId", column = @Column(name = "account_id", nullable = false)) })
	public InfoActivitieHasAccountId getId() {
		return this.id;
	}

	public void setId(InfoActivitieHasAccountId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "account_id", nullable = false, insertable = false, updatable = false)
	public Account getAccount() {
		return this.account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "info_activitie_id", nullable = false, insertable = false, updatable = false)
	public InfoActivitie getInfoActivitie() {
		return this.infoActivitie;
	}

	public void setInfoActivitie(InfoActivitie infoActivitie) {
		this.infoActivitie = infoActivitie;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

}
