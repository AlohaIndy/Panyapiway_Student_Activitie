package PIM.WEBSERIVE.ACTIVITIE.STUDENT.Model;
// default package
// Generated 22 �.�. 2561, 22:56:21 by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Student generated by hbm2java
 */
@Entity
@Table(name = "student", catalog = "panyapiway_student_activitie")
public class Student implements java.io.Serializable {

	private long id;
	private Major major;
	private Person personByPersonId;
	private Person personByAdviserId;
	private YearClass yearClass;
	private Set<StudentHaveDuty> studentHaveDuties = new HashSet<StudentHaveDuty>(0);

	public Student() {
	}

	public Student(long id, Major major, Person personByPersonId, Person personByAdviserId, YearClass yearClass) {
		this.id = id;
		this.major = major;
		this.personByPersonId = personByPersonId;
		this.personByAdviserId = personByAdviserId;
		this.yearClass = yearClass;
	}

	public Student(long id, Major major, Person personByPersonId, Person personByAdviserId, YearClass yearClass,
			Set<StudentHaveDuty> studentHaveDuties) {
		this.id = id;
		this.major = major;
		this.personByPersonId = personByPersonId;
		this.personByAdviserId = personByAdviserId;
		this.yearClass = yearClass;
		this.studentHaveDuties = studentHaveDuties;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "major_id", nullable = false)
	public Major getMajor() {
		return this.major;
	}

	public void setMajor(Major major) {
		this.major = major;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "person_id", nullable = false)
	public Person getPersonByPersonId() {
		return this.personByPersonId;
	}

	public void setPersonByPersonId(Person personByPersonId) {
		this.personByPersonId = personByPersonId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "adviser_id", nullable = false)
	public Person getPersonByAdviserId() {
		return this.personByAdviserId;
	}

	public void setPersonByAdviserId(Person personByAdviserId) {
		this.personByAdviserId = personByAdviserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "year_class_id", nullable = false)
	public YearClass getYearClass() {
		return this.yearClass;
	}

	public void setYearClass(YearClass yearClass) {
		this.yearClass = yearClass;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "student")
	public Set<StudentHaveDuty> getStudentHaveDuties() {
		return this.studentHaveDuties;
	}

	public void setStudentHaveDuties(Set<StudentHaveDuty> studentHaveDuties) {
		this.studentHaveDuties = studentHaveDuties;
	}

}
